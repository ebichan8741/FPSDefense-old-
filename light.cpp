
//================================================================================================
//
// 光源制御処理 [light.cpp]
// Author : TAKUYA EBIHARA
//
//================================================================================================
#include "main.h"
#include "manager.h"
#include "renderer.h"
#include "light.h"

//*************************************************************************************************
// 初期化処理
//*************************************************************************************************
HRESULT CLight::Init(void)
{


    return 0;
}

//*************************************************************************************************
// 終了処理
//*************************************************************************************************
void CLight::Uninit(void)
{
}

//*************************************************************************************************
// 更新処理
//*************************************************************************************************
void CLight::Update(void)
{
}

//*************************************************************************************************
// 描画処理
//*************************************************************************************************
void CLight::Draw(void)
{
}

//*************************************************************************************************
// ライトの設定
//*************************************************************************************************
void CLight::SetLight(void)
{
    LPDIRECT3DDEVICE9 pDevice;

     //デバイスの取得
    pDevice = CManager::GetRenderer()->GetDevice();

    //ライトの設定
    D3DLIGHT9 light;                                                //ライト
    ZeroMemory(&light,sizeof(D3DLIGHT9));                           //初期化
    light.Type = D3DLIGHT_DIRECTIONAL;                              //ライトの種類をディレクショナルライトに設定
    light.Diffuse = D3DXCOLOR(1.0f,1.0f,1.0f,1.0f);                 //拡散光・平行光源(ライトの色)

    light.Ambient = D3DXCOLOR(0.2f,0.2f,0.2f,1.0f);                 //環境光

    D3DXVECTOR3 vecDir = D3DXVECTOR3(0.0f,-1.0f,1.0f);              //ライトの方向

    D3DXVec3Normalize((D3DXVECTOR3*)&light.Direction,&vecDir);      //向きを正規化(単位ベクトルに変換)

    //デバイスにライトを設定
    pDevice->SetLight(0,&light);    //0番目のライトを設定
    pDevice->LightEnable(0,true);    //0番目のライトをＯＮにする
    pDevice->SetRenderState(D3DRS_LIGHTING,TRUE);
}